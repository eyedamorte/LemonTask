{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    console.log(username, password);\n    localStorage.setItem('isLogin', true);\n    localStorage.setItem('expirationDate', expirationDate);\n    dispatch(authSuccess(token));\n    const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n    dispatch(checkAuthTimeout(3600));\n    var obj = JSON.parse('../data.json');\n    console.log(obj);\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const isLogin = localStorage.getItem('isLogin');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/eyedamorte/Desktop/filemanager/frontend/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","console","log","setItem","expirationDate","Date","getTime","obj","JSON","parse","authCheckState","isLogin","getItem","undefined"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAChC,SAAO;AACHH,IAAAA,IAAI,EAAEF,WAAW,CAACM,YADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,QAAQ,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHN,IAAAA,IAAI,EAAEF,WAAW,CAACS,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,MAAM,GAAG,MAAM;AACxBC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AACA,SAAO;AACHV,IAAAA,IAAI,EAAEF,WAAW,CAACa;AADf,GAAP;AAGH,CANM;AAQP,OAAO,MAAMC,gBAAgB,GAAGC,cAAc,IAAI;AAC9C,SAAOC,QAAQ,IAAI;AACfC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACH,KAFS,EAEPK,cAAc,GAAG,IAFV,CAAV;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMG,SAAS,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7C,SAAOJ,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,QAAtB;AACAT,IAAAA,YAAY,CAACY,OAAb,CAAqB,SAArB,EAAgC,IAAhC;AACAZ,IAAAA,YAAY,CAACY,OAAb,CAAqB,gBAArB,EAAuCC,cAAvC;AACAR,IAAAA,QAAQ,CAACZ,WAAW,CAACC,KAAD,CAAZ,CAAR;AACA,UAAMmB,cAAc,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAO,IAAvC,CAAvB;AACAV,IAAAA,QAAQ,CAACF,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACA,QAAIa,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,cAAX,CAAV;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AAGH,GAZD;AAaH,CAdM;AAiBP,OAAO,MAAMG,cAAc,GAAG,MAAM;AAChC,SAAOd,QAAQ,IAAI;AACf,UAAMe,OAAO,GAAGpB,YAAY,CAACqB,OAAb,CAAqB,SAArB,CAAhB;;AACA,QAAI3B,KAAK,KAAK4B,SAAd,EAAyB;AACrBjB,MAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACH,KAFD,MAEO;AACH,YAAMc,cAAc,GAAG,IAAIC,IAAJ,CAASd,YAAY,CAACqB,OAAb,CAAqB,gBAArB,CAAT,CAAvB;;AACA,UAAKR,cAAc,IAAI,IAAIC,IAAJ,EAAvB,EAAoC;AAChCT,QAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACH,OAFD,MAEO;AACHM,QAAAA,QAAQ,CAACZ,WAAW,CAACC,KAAD,CAAZ,CAAR;AACAW,QAAAA,QAAQ,CAACF,gBAAgB,CAAE,CAACU,cAAc,CAACE,OAAf,KAA2B,IAAID,IAAJ,GAAWC,OAAX,EAA5B,IAAoD,IAAtD,CAAjB,CAAR;AACH;AACJ;AACJ,GAbD;AAcH,CAfM","sourcesContent":["import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        console.log(username, password);\n        localStorage.setItem('isLogin', true);\n        localStorage.setItem('expirationDate', expirationDate);\n        dispatch(authSuccess(token));\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        dispatch(checkAuthTimeout(3600));\n        var obj = JSON.parse('../data.json');\n        console.log(obj);\n\n\n    }\n}\n\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const isLogin = localStorage.getItem('isLogin');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}